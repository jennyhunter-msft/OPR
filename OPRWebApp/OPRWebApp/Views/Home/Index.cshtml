@{
    ViewBag.Title = "OPR";
}

<div class="jumbotron">
    <h1>Optimal Pickup Routes (OPR)</h1>
    <p class="lead"> OPR allows you to work with others to follow a shortest distance path. </p>
    <p>
        Do you need to pick up friends from all across the area? With OPR, you can put their addresses into our system as stops, and it will give you the optimal path to pick them up. In addition, they can track your location using the “Locate Traveler” feature.
    </p>

    @Html.TextBox("Location")
    <input type="button" value="Add to Path" onclick="AddLocationToRoute()" />
    <input type="button" value="Optimize!" onclick="OptimizePath()" />
    <p id="CurrentPath">
    <p id="LocationCoordinates" />
    <div id="myMap" style="position:relative;width:755px;height:800px"></div>
    @*<div id='directionsItinerary' style="position:relative;height:800px; float:right"></div>*@
</div>

<script language="JavaScript" type="text/javascript" src="../../../Scripts/jquery-3.1.1.js"></script>
<script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap'></script>
<script type='text/javascript'>
    var map, directionsManager, userPin, watchId;

    function GetMap() {
        map = new Microsoft.Maps.Map('#myMap', {
            credentials: '@ViewBag.BingMapsKey'
        });

        //Load the directions module.
        Microsoft.Maps.loadModule('Microsoft.Maps.Directions', function () {
            //Create an instance of the directions manager.
            directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);

            //Specify the element in which the itinerary will be rendered and set the transport option
            directionsManager.setRequestOptions({
                routeMode: Microsoft.Maps.Directions.RouteMode.walking
            });

            //directionsManager.setRenderOptions({ showInputPanel: true, itineraryContainer: '#directionsItinerary' });
        });
    }

    document.getElementById("Location").addEventListener("keydown", function (e) {
        //When Enter is pressed
        if (e.keyCode == 13) {
            AddLocationToRoute();
        }
    }, false);

    function AddLocationToRoute() {
        $.ajax({
            url: '@Url.Action("AddLocationToPath", "Home")',
            type: 'POST',
            async: false,
            dataType: 'json',
            data: {
                sessionId: "@ViewBag.SessionId",
                pathId: "@ViewBag.PathId",
                location: $('#Location').val()
            },
            success: function (result) {
                //document.getElementById("CurrentPath").innerHTML = result.join("<br />");

                //Only add the last point to the currently rendered map
                var i = result.length-1;
                locationInfo = result[i].split(/[:]+/);
                var coordinates = locationInfo[2].split(/[,]+/);
                var point = new Microsoft.Maps.Directions.Waypoint({ address: locationInfo[1], location: new Microsoft.Maps.Location(coordinates[0], coordinates[1]) }, locationInfo[0]);
                directionsManager.addWaypoint(point);

                // Recalculate directions
                if (directionsManager.getAllWaypoints().length >= 2) {
                    directionsManager.calculateDirections();
                }
            },
            error: function (result) {
                alert($.parseJSON(result.responseText).error);
            }
        });
    }

    function OptimizePath() {
        document.getElementById("CurrentPath").innerHTML = "Psyched! I can't do that yet."
        $.ajax({
            url: '@Url.Action("OptimizePath", "Home")',
            type: 'POST',
            async: false,
            dataType: 'json',
            data: {
                sessionId: "@ViewBag.SessionId",
                pathId: "@ViewBag.PathId"
            },
            success: function (result) {
                RenderMap(result);
            },
            error: function (result) {
                alert($.parseJSON(result.responseText).error);
            }
        });
    }
    
    function RenderMap(currentPath) {
        directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
        directionsManager.setRequestOptions({routeMode: Microsoft.Maps.Directions.RouteMode.walking});

        var arrayLength = currentPath.length;
        for (var i = 0; i < arrayLength; i++) {
            locationInfo = currentPath[i].split(/[:]+/);
            var coordinates = locationInfo[2].split(/[,]+/);
            var point = new Microsoft.Maps.Directions.Waypoint({ address: locationInfo[1], location: new Microsoft.Maps.Location(coordinates[0], coordinates[1]) }, locationInfo[0]);

            directionsManager.addWaypoint(point);
        }
        // Recalculate directions
        if (directionsManager.getAllWaypoints().length >= 2) {
            directionsManager.calculateDirections();
        }
    }
</script>
<script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer></script>
<script>
    $(window).on("load", function () {
        RenderMap(("@Html.Raw(ViewBag.CurrentPath)").split(/[&]+/));
    });
</script>